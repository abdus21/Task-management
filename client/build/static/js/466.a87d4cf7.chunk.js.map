{"version":3,"file":"static/js/466.a87d4cf7.chunk.js","mappings":"yMASA,EATkB,SAACA,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAACC,GAAD,OAAWP,EAAOO,Q,kBCyIvC,EAtIoB,YACDC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,yBACC,IAEH,IAEIC,EACFC,EACAC,EAJIC,GAAcC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAAQC,SAKvDC,GAAcC,EAAAA,EAAAA,UAiChB,OACE,gBAAKC,UAAU,YAAf,UACE,gBAAKA,UAAU,oCAAf,UACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,OAAf,UACE,gBAAKA,UAAU,YAAf,UACE,iBAAKA,UAAU,kBAAf,WACE,gBACEC,IAAK,SAACC,GAAD,OAAYJ,EAAcI,GAC/BF,UAAU,kBACVG,IAAKV,EAAW,MAChBW,IAAKX,EAAW,SAChBY,MAAO,CAAEC,SAAU,YAErB,mBACA,iBAAKN,UAAU,MAAf,WACE,iBAAKA,UAAU,YAAf,WACE,gDACA,kBACEO,SAlDC,WACnB,IAAMC,EAAUhB,EAAWiB,MAAM,GACjCC,EAAUF,GAASG,MAAK,SAACC,GACvBd,EAAYK,IAAMS,MAgDFX,IAAK,SAACC,GAAD,OAAYV,EAAaU,GAC9BW,YAAY,aACZb,UAAU,iCACVc,KAAK,aAGT,iBAAKd,UAAU,YAAf,WACE,8CACA,kBAEEe,aAActB,EAAW,MACzBuB,UAAU,EACVH,YAAY,aACZb,UAAU,iCACVc,KAAK,SALAG,KAAKC,WAQd,iBAAKlB,UAAU,YAAf,WACE,0CACA,kBAEEe,aAActB,EAAW,SACzBuB,UAAU,EACVH,YAAY,YACZb,UAAU,iCACVc,KAAK,QALAG,KAAKC,WAQd,iBAAKlB,UAAU,YAAf,WACE,qCACA,kBAEEe,aAActB,EAAW,KACzBQ,IAAK,SAACC,GAAD,OAAYZ,EAAcY,GAC/BW,YAAY,OACZb,UAAU,iCACVc,KAAK,QALAG,KAAKC,WASd,iBAAKlB,UAAU,YAAf,WACE,uCACA,kBAEEe,aAActB,EAAW,MACzBQ,IAAK,SAACC,GAAD,OAAYX,EAAgBW,GACjCW,YAAY,SACZb,UAAU,iCACVc,KAAK,UALAG,KAAKC,WAQd,gBAAKlB,UAAU,YAAf,UACE,mBACEmB,QAjGE,WACpB,GAAIC,EAAAA,EAAAA,QAAuB9B,EAAYO,OACrCwB,EAAAA,EAAAA,aAA0B,yBACrB,GAAKD,EAAAA,EAAAA,SAAwB7B,EAAcM,OAE3C,CACL,IAAMyB,EAAOhC,EAAYO,MACnB0B,EAAQhC,EAAcM,MACtB2B,EAAQ1B,EAAYK,IAE1Bd,EAAAA,EAAAA,qBACEiC,EACAC,EACAC,EACA/B,EAAYgC,OACZd,MAAK,SAAC3B,GACFA,GAEFK,EAAAA,EAAAA,+BAdJgC,EAAAA,EAAAA,aAA0B,0BA8FVrB,UAAU,oDAFZ","sources":["helper/GetBase64.js","components/UserProfile/UserProfile.jsx"],"sourcesContent":["const GetBase64 = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = (error) => reject(error);\n  });\n};\n\nexport default GetBase64;\n","import { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiRequest from \"../../APIRequest/ApiRequest\";\nimport FormValidation from \"../../helper/FormValidation\";\nimport GetBase64 from \"../../helper/GetBase64\";\nimport ToastMessage from \"../../helper/ToastMessage\";\n\nconst UserProfile = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    ApiRequest.ProfileSelectRequest();\n  }, []);\n\n  const userProfile = useSelector((state) => state.profile.value);\n\n  let userNameRef,\n    userMobileRef,\n    userImgRef,\n    userImgView = useRef();\n\n  const previewImage = () => {\n    const imgFile = userImgRef.files[0];\n    GetBase64(imgFile).then((base64Img) => {\n      userImgView.src = base64Img;\n    });\n  };\n\n  const updateProfile = () => {\n    if (FormValidation.isEmpty(userNameRef.value)) {\n      ToastMessage.errorMessage(\"Name is Required\");\n    } else if (!FormValidation.isMobile(userMobileRef.value)) {\n      ToastMessage.errorMessage(\"Invalid Mobile Number\");\n    } else {\n      const name = userNameRef.value;\n      const phone = userMobileRef.value;\n      const photo = userImgView.src;\n\n      ApiRequest.ProfileUpdateRequest(\n        name,\n        phone,\n        photo,\n        userProfile.email,\n      ).then((result) => {\n        if (result) {\n          // navigate(\"/profile\");\n          ApiRequest.ProfileSelectRequest();\n        }\n      });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row d-flex justify-content-center\">\n        <div className=\"col-md-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"container-fluid\">\n                <img\n                  ref={(input) => (userImgView = input)}\n                  className=\"icon-nav-img-lg\"\n                  src={userProfile[\"photo\"]}\n                  alt={userProfile[\"userName\"]}\n                  style={{ maxWidth: \"200px\" }}\n                />\n                <hr />\n                <div className=\"row\">\n                  <div className=\"col-4 p-2\">\n                    <label>Profile Picture</label>\n                    <input\n                      onChange={previewImage}\n                      ref={(input) => (userImgRef = input)}\n                      placeholder=\"User Email\"\n                      className=\"form-control animated fadeInUp\"\n                      type=\"file\"\n                    />\n                  </div>\n                  <div className=\"col-4 p-2\">\n                    <label>Email Address</label>\n                    <input\n                      key={Date.now()}\n                      defaultValue={userProfile[\"email\"]}\n                      readOnly={true}\n                      placeholder=\"User Email\"\n                      className=\"form-control animated fadeInUp\"\n                      type=\"email\"\n                    />\n                  </div>\n                  <div className=\"col-4 p-2\">\n                    <label>User Name</label>\n                    <input\n                      key={Date.now()}\n                      defaultValue={userProfile[\"userName\"]}\n                      readOnly={true}\n                      placeholder=\"User Name\"\n                      className=\"form-control animated fadeInUp\"\n                      type=\"text\"\n                    />\n                  </div>\n                  <div className=\"col-4 p-2\">\n                    <label>Name</label>\n                    <input\n                      key={Date.now()}\n                      defaultValue={userProfile[\"name\"]}\n                      ref={(input) => (userNameRef = input)}\n                      placeholder=\"Name\"\n                      className=\"form-control animated fadeInUp\"\n                      type=\"text\"\n                    />\n                  </div>\n\n                  <div className=\"col-4 p-2\">\n                    <label>Mobile</label>\n                    <input\n                      key={Date.now()}\n                      defaultValue={userProfile[\"phone\"]}\n                      ref={(input) => (userMobileRef = input)}\n                      placeholder=\"Mobile\"\n                      className=\"form-control animated fadeInUp\"\n                      type=\"number\"\n                    />\n                  </div>\n                  <div className=\"col-4 p-2\">\n                    <button\n                      onClick={updateProfile}\n                      className=\"btn w-100 float-end btn-primary animated fadeInUp\"\n                    >\n                      Update\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"names":["file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","useNavigate","useEffect","ApiRequest","userNameRef","userMobileRef","userImgRef","userProfile","useSelector","state","profile","value","userImgView","useRef","className","ref","input","src","alt","style","maxWidth","onChange","imgFile","files","GetBase64","then","base64Img","placeholder","type","defaultValue","readOnly","Date","now","onClick","FormValidation","ToastMessage","name","phone","photo","email"],"sourceRoot":""}