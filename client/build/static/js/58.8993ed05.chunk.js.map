{"version":3,"file":"static/js/58.8993ed05.chunk.js","mappings":"oLAqFA,UA9EuB,WACrB,IAAIA,EACFC,GAAqBC,EAAAA,EAAAA,UAEjBC,GAAWC,EAAAA,EAAAA,MAEbC,EAAQC,EAAAA,EAAAA,cACRC,EAAMD,EAAAA,EAAAA,SAqBV,OACE,gBAAKE,UAAU,YAAf,UACE,gBAAKA,UAAU,6BAAf,UACE,gBACEA,UAAU,kCACVC,MAAO,CAAEC,UAAW,SAFtB,UAIE,gBAAKF,UAAU,gBAAf,UACE,iBAAKA,UAAU,YAAf,WACE,8CACA,mBACA,mDACA,kBACEG,UAAU,EACVC,MAAOP,EACPQ,YAAY,aACZL,UAAU,iCACVM,KAAK,WAEP,mBACA,6CACA,kBACEC,IAAK,SAACC,GAAD,OAAYhB,EAAcgB,GAC/BH,YAAY,eACZL,UAAU,iCACVM,KAAK,cAEP,mBACA,iDACA,kBACEC,IAAK,SAACC,GAAD,OAAYf,EAAqBe,GACtCH,YAAY,mBACZL,UAAU,iCACVM,KAAK,cAEP,mBACA,mBACEG,QAxDI,WACZC,EAAAA,EAAAA,QAAuBlB,EAAYY,OACrCO,EAAAA,EAAAA,aAA0B,wBACjBD,EAAAA,EAAAA,QAAuBjB,EAAmBW,OACnDO,EAAAA,EAAAA,aAA0B,gCACjBlB,EAAmBW,QAAUZ,EAAYY,MAClDO,EAAAA,EAAAA,aAA0B,yCAE1BC,EAAAA,EAAAA,iBAA4Bf,EAAOE,EAAKP,EAAYY,OAAOS,MACzD,SAACC,GACKA,IACFH,EAAAA,EAAAA,eAA4BG,EAASC,KAAKC,SAC1CrB,EAAS,eA6CLK,UAAU,oDAFZ","sources":["components/AccountRecovery/CreatePassword.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ApiRequest from \"../../APIRequest/ApiRequest\";\nimport FormValidation from \"../../helper/FormValidation\";\nimport SessionHelper from \"../../helper/SessionHelper\";\nimport ToastMessage from \"../../helper/ToastMessage\";\n\nconst CreatePassword = () => {\n  let passwordRef,\n    confirmPasswordRef = useRef();\n\n  const navigate = useNavigate();\n\n  let email = SessionHelper.getOtpEmail();\n  let otp = SessionHelper.getOtp();\n\n  const resetPass = () => {\n    if (FormValidation.isEmpty(passwordRef.value)) {\n      ToastMessage.errorMessage(\"Password is Required\");\n    } else if (FormValidation.isEmpty(confirmPasswordRef.value)) {\n      ToastMessage.errorMessage(\"Confirm Password is Required\");\n    } else if (confirmPasswordRef.value !== passwordRef.value) {\n      ToastMessage.errorMessage(\"Password & Confirm Password Not Match\");\n    } else {\n      ApiRequest.PasswordRecovery(email, otp, passwordRef.value).then(\n        (response) => {\n          if (response) {\n            ToastMessage.successMessage(response.data.message);\n            navigate(\"/login\");\n          }\n        },\n      );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row justify-content-center\">\n        <div\n          className=\"col-md-7 col-lg-6 center-screen\"\n          style={{ marginTop: \"100px\" }}\n        >\n          <div className=\"card w-90 p-4\">\n            <div className=\"card-body\">\n              <h5>Set New Password</h5>\n              <br />\n              <label>Your email address</label>\n              <input\n                readOnly={true}\n                value={email}\n                placeholder=\"User Email\"\n                className=\"form-control animated fadeInUp\"\n                type=\"email\"\n              />\n              <br />\n              <label>New Password</label>\n              <input\n                ref={(input) => (passwordRef = input)}\n                placeholder=\"New Password\"\n                className=\"form-control animated fadeInUp\"\n                type=\"password\"\n              />\n              <br />\n              <label>Confirm Password</label>\n              <input\n                ref={(input) => (confirmPasswordRef = input)}\n                placeholder=\"Confirm Password\"\n                className=\"form-control animated fadeInUp\"\n                type=\"password\"\n              />\n              <br />\n              <button\n                onClick={resetPass}\n                className=\"btn w-100 animated fadeInUp float-end btn-primary\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CreatePassword;\n"],"names":["passwordRef","confirmPasswordRef","useRef","navigate","useNavigate","email","SessionHelper","otp","className","style","marginTop","readOnly","value","placeholder","type","ref","input","onClick","FormValidation","ToastMessage","ApiRequest","then","response","data","message"],"sourceRoot":""}